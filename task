import java.util.ArrayList;
import java.util.List;

enum Type {
    REGULAR(0.05), PREMIUM(0.1), VIP(0.2);
    
    private final double discount;
    
    Type(double discount) {
        this.discount = discount;
    }
    
    public double getDiscount() {
        return discount;
    }
}

###########################################################################################################

class Customer {
    private String name;
    private String type;

    public Customer(String name, String type) {
        this.name = name;
        this.type = type;
    }

    public String getName() {
        return name;
    }

    public double getDiscount() {
        switch (customerType) {
            case REGULAR:
                return CustomerType.REGULAR.getDiscount();
            case PREMIUM:
                return CustomerType.PREMIUM.getDiscount();
            case VIP:
                return CustomerType.VIP.getDiscount();
            default:
                return 0.0;
        }
    }
}

################################################################################################################

class Order {
    private Customer customer;
    private List<String> items;
    private List<Double> prices;
    
    public Order(Customer customer) {
        this.customer = customer;
        this.items = new ArrayList<>();
        this.prices = new ArrayList<>();
    }

    public void addItem(String item, double price) {
        items.add(item);
        prices.add(price);
    }

    private double calculateTotal() {
        double totalPrice = 0;
        for (double price : prices) {
            totalPrice += price;
        }
       return totalPrice;
    }

    private double calculateDiscountedPrice() {
        return calculateTotal() - (calculateTotal() * customer.getDiscount());
    }

    public void printOrder() {
        System.out.println("Customer: " + customer.getName());
        System.out.println("Items: " + items);
        System.out.println("Total Price: " + calculateTotal());
        System.out.println("Discounted Price: " + calculateDiscountedPrice());
    }

    public void generateInvoice() {
        System.out.println("Generating Invoice...");
        System.out.println("Customer: " + customer.getName());
        System.out.println("Total: $" + calculateTotal());
        System.out.println("Discounted Total: $" + calculateDiscountedPrice());
        System.out.println("Items: " + items);
        System.out.println("Thank you for shopping with us!");
    }
}

############################################################################################################

class OrderManagementSystem {
    public static final String LAPTOP = "Laptop";
    public static final String MOUSE = "Mouse";
    public static final String KEYBOARD = "Keyboard";

    public static void main(String[] args) {
        Customer customer = new Customer("John Doe", VIP);
        Order order = new Order(customer);
        
        order.addItem(LAPTOP, 1000);
        order.addItem(MOUSE, 50);
        order.addItem(KEYBOARD, 80);

        order.printOrder();
        order.generateInvoice();
    }
}
